openapi: 3.0.3
info:
  title: Notification Management API
  description: |
    This API specification defines the endpoints and operations for managing notifications.
    It includes functionalities such as creating new notifications and retrieving all notifications for a specific user.
  contact:
    email: santtiagolozano@gmail.com
  version: 1.0.11
servers:
  - url: https://trainingdev/api/v1
tags:
  - name: notification
    description: Operations related to notification management.
paths:
  /notification:
    post:
      tags:
        - notification
      summary: Create a New Notification
      description: |
        This operation allows the creation of a new notification for a user.

        **Business Rules:**
        - A notification must have a valid sender, recipient, and content.
        - If the sender user does not exist, return the error: "Sender user does not exist."
        - If the recipient user does not exist, return the error: "Receptor does not exist."

      operationId: createNotification
      requestBody:
        description: Notification object containing the details of the notification to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      responses:
        '201':
          description: Notification successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationDetail'
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                badRequest:
                  summary: Bad Request error
                  value:
                    code: "400"
                    message: "Notification description cannot be empty"
        '404':
          description: Resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                senderNotFound:
                  summary: Sender Not Found error
                  value:
                    code: "404"
                    message: "Sender user does not exist."
                receptorNotFound:
                  summary: Receptor Not Found error
                  value:
                    code: "404"
                    message: "Receptor does not exist."
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                internalError:
                  summary: Internal Server Error
                  value:
                    code: "500"
                    message: "An unexpected error occurred. Please try again later."

  /notification/{receptorUserId}:
    get:
      tags:
        - notification
      summary: Retrieve All Notifications by User ID
      description: |
        This operation retrieves all notifications for a specified user ID.

        **Business Rules:**
        - If no notifications are found for the user, return the error: "Notifications not found."

      operationId: getAllNotification
      parameters:
        - name: receptorUserId
          in: path
          description: The unique identifier of the user to retrieve notifications for.
          required: true
          example: 10
          schema:
            type: integer
      responses:
        '200':
          description: Notifications successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationDetailList'
        '404':
          description: Resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                notificationsNotFound:
                  summary: Notifications Not Found error
                  value:
                    code: "404"
                    message: "Notifications not found."
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                internalError:
                  summary: Internal Server Error
                  value:
                    code: "500"
                    message: "An unexpected error occurred. Please try again later."


components:
  schemas:
    NotificationRequest:
      type: object
      required:
        - senderUserId
        - receptorUserId
        - type
        - description
      properties:
        senderUserId:
          type: integer
          example: 10
          description: |
            Unique identifier for the user sending the notification.

            **Business Rules:**
            - If the senderUserId is null, return the error: "Sender user ID cannot be null."
        receptorUserId:
          type: integer
          example: 30
          description: |
            Unique identifier for the user receiving the notification.

            **Business Rules:**
            - If the receptorUserId is null, return the error: "Receptor user ID cannot be null."
        type:
          type: string
          enum:
            - MESSAGE
            - COMMENT
            - RELATIONSHIP
          example: MESSAGE
          description: |
            The type of notification being sent.

            **Business Rules:**
            - If the type is null or does not match one of the allowed values, return the error: "Invalid notification type."
        description:
          type: string
          example: 'New message'
          description: |
            The content or description of the notification.

            **Business Rules:**
            - If the description is empty, return the error: "Notification description cannot be empty."
    
    User:
      type: object
      properties:
        id:
          type: integer
          example: 10
          description: |
            Unique identifier for the user.
        name:
          type: string
          example: Santiago Lozano
          description: |
            Full name of the user.
        profilePhoto:
          type: string
          example: 'https://trainingdev-s3/...'
          description: |
            URL of the user's profile picture.

    NotificationDetail:
      type: object
      properties:
        id:
          type: integer
          example: 100
          description: |
            Unique identifier for the notification.
        senderUser:
          $ref: '#/components/schemas/User'
        receptorUser:
          $ref: '#/components/schemas/User'
        type:
          type: string
          enum:
            - MESSAGE
            - COMMENT
            - RELATIONSHIP
          example: MESSAGE
          description: |
            The type of notification being sent.
        description:
          type: string
          example: 'New message'
          description: |
            The content or description of the notification.
        creationDate:
          type: string
          example: '2024-06-29T07:36:39.2252098'
          description: |
            Date and time when the notification was created (ISO 8601 format).
    
    NotificationDetailList:
      type: object
      properties:
        notificationList:
          type: array
          description: |
            List of notifications for a specified user.
          items:
            $ref: '#/components/schemas/NotificationDetail'
    
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: |
            Status code of the error.
        message:
          type: string
          description: |
            Description of the error message.

